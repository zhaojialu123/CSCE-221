#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 0.8in
\rightmargin 1in
\bottommargin 0.8in
\headheight 0cm
\headsep 0cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSCE 221 Cover Page
\begin_inset Newline newline
\end_inset

 Homework Assignment #2 
\begin_inset Newline newline
\end_inset

Due March 27 at 23:59 pm to eCampus
\end_layout

\begin_layout Author
First Name
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Jialu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Last Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Zhao
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

UIN
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

426000712
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\begin_layout Date
User Name 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

zhaojialu123
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

E-mail address
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

zhaojialu123@tamu.edu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more Aggie Honor System Office 
\begin_inset CommandInset href
LatexCommand href
target "http://aggiehonor.tamu.edu/"

\end_inset


\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="10" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
web sources
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

slides
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
https://www.cise.ufl.edu/class/cot3100fa07/quicksort_analysis.pdf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
http://www.cs.princeton.edu/~wayne/cs423/lectures/avg-case-4up.pdf
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Printed material
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Quotation
“On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.” 
\end_layout

\begin_layout Date
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Jialu
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

Zhao
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset

03/16/2017
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Homework 2
\end_layout

\begin_layout Standard
\align center

\series bold
due March 27 at 11:59 pm to eCampus.
\end_layout

\begin_layout Standard
1.(15 points) Write a recursive function that counts the number of nodes
 in a singly linked list.
 Write a recurrence relation that represents your algorithm.
 Solve the relation and obtain the running time of the algorithm in Big-O.
 
\end_layout

\begin_layout Standard
recursive function:
\end_layout

\begin_layout LyX-Code
int count(node* Iter)
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
if(Iter == NULL)
\end_layout

\begin_layout LyX-Code
return 0;
\end_layout

\begin_layout LyX-Code
return 1+count(Iter->next);
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
recurrence relations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{n}=F_{n-1}+1
\]

\end_inset


\end_layout

\begin_layout Standard
initial value:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{0}=0
\]

\end_inset


\end_layout

\begin_layout Standard
solve the relation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{n}=F_{n-1}+1=F_{n-2}+1+1=F_{n-3}+1+1+1=......=F_{0}+1+1+....+1=F_{0}+n=0+n=n
\]

\end_inset


\end_layout

\begin_layout Standard
running time:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(n)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
2.(15 points) Write a recursive function that finds the maximum value in
 an array of int values without using any loops.
 Write a recurrence relation that represents your algorithm.
 Solve the relation and obtain the running time of the algorithm in Big-O.
 
\end_layout

\begin_layout Standard
recursive function:
\end_layout

\begin_layout LyX-Code
int findMaximum(int array[], int low, int high)
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
if(low == high)
\end_layout

\begin_layout LyX-Code
return array[low];
\end_layout

\begin_layout LyX-Code
return max(array[low],findMaximum(array,low+1,high));
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout Standard
note:
\end_layout

\begin_layout Standard
low = 0;
\end_layout

\begin_layout Standard
high = the size of array - 1;
\end_layout

\begin_layout Standard
recurrence relations:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{n}=F_{n-1}+1;
\]

\end_inset

00
\end_layout

\begin_layout Standard
Note:
\begin_inset Formula $F_{n}$
\end_inset

 represents the times of do max function
\end_layout

\begin_layout Standard
initial value:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{0}=0
\]

\end_inset


\end_layout

\begin_layout Standard
solve the relation:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
F_{n}=F_{n-1}+1=F_{n-2}+1+1=F_{n-3}+1+1+1=......=F_{0}+1+1+....+1=F_{0}+n=0+n=n
\]

\end_inset


\end_layout

\begin_layout Standard
running time:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(n)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
3.(10 points) What data structure is most suitable to determine if a string
 s is a palindrome, that is, it is equal to its reverse.
 For example, “racecar” and “gohan gasalamiimalasagnahog” are palindromes.
 Justify your answer.
 Use Big-O notation to represent the efficiency of your algorithm.
 
\end_layout

\begin_layout Standard
Stack is most suitable to determine if a string s is a palindrome.
\end_layout

\begin_layout Standard
Algorithm:
\end_layout

\begin_layout LyX-Code
step 1:push every characters in the string to stack -- O(n)
\end_layout

\begin_layout LyX-Code
step 2:pop every elements on the stack to a new string -- -- O(n)
\end_layout

\begin_layout LyX-Code
step3: if new string is same with the old string, this string is palindrome
 -- O(n)
\end_layout

\begin_layout Standard
So the efficiency of this Algorithm:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(n)
\]

\end_inset


\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
4.(10 points) Describe how to implement the stack ADT using two queues.
 What is the running time of the push and pop functions in this case? 
\end_layout

\begin_layout Standard
Solution:
\end_layout

\begin_layout Standard
Use two queues Q1 and Q2, where Q1 stores elements and Q2 is used for auxiliary.
\end_layout

\begin_layout LyX-Code
bool isEmpty() { return Q1.isEmpty();} --- O(1)
\end_layout

\begin_layout LyX-Code
int size() { return Q1.size();} --- O(1)
\end_layout

\begin_layout LyX-Code
T top()  --- O(n)
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
while(!Q1.isEmpty())
\end_layout

\begin_layout LyX-Code
Q2.enqueue(Q1.dequeue()); // use another queue to help change the sequence
\end_layout

\begin_layout LyX-Code
T elem = Q2.first();
\end_layout

\begin_layout LyX-Code
while(!Q2.isEmpty())
\end_layout

\begin_layout LyX-Code
Q1.enqueue(Q2.dequeue()); // change the sequence back
\end_layout

\begin_layout LyX-Code
return elem;
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
T pop()  --- O(n)
\end_layout

\begin_layout LyX-Code
{
\end_layout

\begin_layout LyX-Code
while(!Q1.isEmpty())
\end_layout

\begin_layout LyX-Code
Q2.enqueue(Q1.dequeue()); // use another queue to help change the sequence
\end_layout

\begin_layout LyX-Code
T elem = Q2.dequeue();
\end_layout

\begin_layout LyX-Code
while(!Q2.isEmpty())
\end_layout

\begin_layout LyX-Code
Q1.enqueue(Q2.dequeue()); // change the sequence back
\end_layout

\begin_layout LyX-Code
return elem;
\end_layout

\begin_layout LyX-Code
}
\end_layout

\begin_layout LyX-Code
void push(T elem) { Q1.enqueue(elem);}  --- O(1)
\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout LyX-Code

\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
5.(10 points) What is the best, worst and average running time of quick sort
 algorithm? Provide arrangement of the input and the selection of the pivot
 point at every case.
 Provide a recursive relation and solution for each case.
 
\end_layout

\begin_layout Standard
(a)Best-case analysis:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(nlogn)
\]

\end_inset


\end_layout

\begin_layout Standard
The best case of quicksort occurs when the pivot we pick happens to divide
 the array into two exactly equal parts, in every step.Thus we have k=n/2
 and n-k=n/2 for the original array of size n.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=2T(\frac{n}{2})+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2(2T(\frac{n}{4})+a\frac{n}{2})+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=4T(\frac{n}{4})+2an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2^{2}T(\frac{n}{2^{2}})+2an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
.......
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2^{i}T(\frac{n}{2^{i}})+ian
\]

\end_inset


\end_layout

\begin_layout Standard
this recurrence will stop when i = logn:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=nT(1)+anlogn
\]

\end_inset


\end_layout

\begin_layout Standard
then we got the result:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(nlogn)
\]

\end_inset


\end_layout

\begin_layout Standard
(b)Average-case analysis
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(nlogn)
\]

\end_inset


\end_layout

\begin_layout Standard
When input is assumed to be in random order and also pivot is in the random
 position
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename 72B9C3B1995538CB871D7339AA35B435.jpg
	lyxscale 30
	scale 30
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Standard
(c)Worst-case analysis
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(n^{2})
\]

\end_inset


\end_layout

\begin_layout Standard
When the pivot happened to be the least element of the array, so that we
 had k=1 and n-k=n-1.
 In such case, we have:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=T(1)+T(n-1)+an
\]

\end_inset


\end_layout

\begin_layout Standard
Now let us anaysis the time complexity of quick sort in such a case:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=T(1)+T(n-1)+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=T(1)+(T(n-2)+T(1)+a(n-1))+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2T(1)+T(n-2)+an+a(n-1)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=3T(1)+T(n-3)+an+a(n-1)+a(n-2)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
........
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=iT(1)+T(n-i)+a(n+(n-1)+(n-2)+....(n-i+1))
\]

\end_inset


\end_layout

\begin_layout Standard
this recurrence will stop when i = n:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=nT(1)+T(0)+a(n+(n-1)+(n-2)+....+2+1)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=nT(1)+T(0)+a\frac{n(n+1)}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
which we can got the result:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(n^{2})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
6.(10 points) What is the best, worst and average running time of merge sort
 algorithm? Use two methods for solving a recurrence relation for the average
 case to justify your answer.
 
\end_layout

\begin_layout Standard
The merge sort requires 
\begin_inset Formula $O(nlogn)$
\end_inset

 comparisons, where n is the length of an array to be sorted.
 There are no best-case or worst-case for the merge sort.
 Because the merge sort needs a duplicate copy of the array being sorted
 therefore in many situcations it can be impractical.
\end_layout

\begin_layout Standard
two methods:
\end_layout

\begin_layout Standard
(a)Iterativing method:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=2T(\frac{n}{2})+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2(2T(\frac{n}{4})+a\frac{n}{2})+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=4T(\frac{n}{4})+2an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2^{2}T(\frac{n}{2^{2}})+2an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
.......
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=2^{i}T(\frac{n}{2^{i}})+ian
\]

\end_inset


\end_layout

\begin_layout Standard
this recurrence will stop when i = logn:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=nT(1)+anlogn
\]

\end_inset


\end_layout

\begin_layout Standard
then we got the result:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(nlogn)
\]

\end_inset


\end_layout

\begin_layout Standard
(b)Master Theorem
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=2T(\frac{n}{2})+an
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a=2,b=2,f(n)=an;
\]

\end_inset


\end_layout

\begin_layout Standard
according to master theorem:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)=a(n/b)+f(n)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
f(n)=\text{Θ}(nlog_{2}2)=\text{Θ}(n)
\]

\end_inset


\end_layout

\begin_layout Standard
so we can got the result:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
O(nlogn)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
7.(10 points) R-10.17 p.
 493
\begin_inset Newline newline
\end_inset

For the following statements about red-black trees, provide a justification
 for each true statement and a counterexample for each false one.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
(a)A subtree of a red-black tree is itself a red-black tree.
\end_layout

\begin_layout Standard
False:
\end_layout

\begin_layout Standard
counterexample:
\end_layout

\begin_layout Standard
A subtree with a red root is not a red black tree.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(b)The sibling of an external node is either external or it is red.
\end_layout

\begin_layout Standard
True:
\end_layout

\begin_layout Standard
Proof: For this question, we consider from the opposite way: we assume that
 there is an external node has a black internal sibling and let h be the
 black depth of the external node.
 Then the black depth of the external node's black, internal sibling would
 be at least h+1 which violate the depth rule of a red-black tree.
\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(c)There is a unique (2,4) tree associated with a given red-black tree.
\end_layout

\begin_layout Standard
True:
\end_layout

\begin_layout Standard
Proof:
\end_layout

\begin_layout Standard
The given one means that given a red-black tree T, there is an unique 2-4
 tree T' associated with T.
 Every node in the red-black tree with two red children is uniquely represented
 as a 4 -node in T', each node with one red child is uniquely represented
 as a 3-node in T', and a node with no red children is uniquely represented
 as a 2-node in T'.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(d)There is a unique red-black tree associated with a given (2,4) tree.
\end_layout

\begin_layout Standard
False:
\end_layout

\begin_layout Standard
counter example:
\end_layout

\begin_layout Standard
A 3-node has two different possible representations in a red-black tree.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename 9DDB6A69CF94F6C9D73AFB94253398E1.jpg
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
8.(10 points) R-10.19 p.
 493
\begin_inset Newline newline
\end_inset

Consider a tree 
\begin_inset Formula $T$
\end_inset

 storing 100,000 entries.
 What is the worst-case height of 
\begin_inset Formula $T$
\end_inset

 in the following cases?
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
(a)
\begin_inset Formula $T$
\end_inset

 is an AVL tree.
\end_layout

\begin_layout Standard
AVL tree: 
\begin_inset Formula 
\[
h<1.44log(n+1)
\]

\end_inset


\end_layout

\begin_layout Standard
so the worst case height of T is 24.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(b)
\begin_inset Formula $T$
\end_inset

 is a (2,4) tree.
\end_layout

\begin_layout Standard
(2,4) tree: 
\begin_inset Formula 
\[
h<=log(n+1)
\]

\end_inset


\end_layout

\begin_layout Standard
so the worst case height of T is 17.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(c)
\begin_inset Formula $T$
\end_inset

 is a red-black tree.
\end_layout

\begin_layout Standard
red-black tree: 
\begin_inset Formula 
\[
h<=2log(n+1)
\]

\end_inset


\end_layout

\begin_layout Standard
so the worst case height of T is 33.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
(d)
\begin_inset Formula $T$
\end_inset

 is a binary search tree.
\end_layout

\begin_layout Standard
T is a binary search tree.
\end_layout

\begin_layout Standard
The worst case is linear so 100,000.
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\begin_layout Standard
9.(10 points) R-9.16 p.
 418
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
Draw an example skip list that results from performing the following series
 of operations on the skip list shown in Figure 9.12: 
\family typewriter
erase(
\family default
38
\family typewriter
), insert(
\family default
48,x
\family typewriter
), insert(
\family default
24,y
\family typewriter
), erase(
\family default
55
\family typewriter
)
\family default
.
 Record your coin flips, as well.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename 9.jpg
	lyxscale 30
	scale 30

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace 0.5in
\end_inset


\end_layout

\end_body
\end_document
